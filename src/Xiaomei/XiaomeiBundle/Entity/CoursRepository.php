<?php

namespace Xiaomei\XiaomeiBundle\Entity;

use Doctrine\ORM\EntityRepository;
use \Datetime;

/**
 * CoursRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */

class CoursRepository extends EntityRepository
{
	// public function findHomeContents(){

	// 	$query = $this->getEntityManager()->createQuery('
	// 		SELECT cou, cat FROM XiaomeiXiaomeiBundle:Cours cou 
	// 		LEFT JOIN cou.category cat ');
 //         //order by limit by 
	// 	$contents = $query->getResult();

	// 	return $contents;
	// 	}

	public function findHomeContents($tri='c.dateCours'){

		//$tri="c.nrPlaceReste"
		//$tri='c.categorie.name'
		//$tri='c.lieu'

		//utiliser formulaire get pour obtenir le valeur de $tri: 

		$query = $this->createQueryBuilder('c')
				->select('c, cat,user')	//hyper facile à oublier						    
			    ->leftJoin('c.category', 'cat')	
			    ->leftJoin('c.user', 'user')
			    ->orderBy($tri,'DESC')
			    //->LIMIT BY 30 
			    ->getQuery();
         //order by limit by 
		$contents = $query->getResult();

		return $contents;
		}
		

	public function findFullSingleContent($id){

		$query = $this->createQueryBuilder('c')
				->select('c, cat,user,inscription')	//hyper facile à oublier
			    ->where('c.id = :id')
			    ->leftJoin('c.category', 'cat')
			    ->leftJoin('c.user', 'user')
			    ->leftJoin('c.inscription', 'inscription')		
			    ->setParameter('id', $id)
			    ->getQuery();

		$content = $query->getSingleResult();
       
		return $content;
	}


/*SELECT SUM(product.price) AS cart_price, cart.cart_id 
FROM cart
LEFT JOIN cart_product ON cart.cart_id = cart_product.cart_id
LEFT JOIN product ON product.product_id = cart_product.product_id
GROUP BY cart.cart_id
ORDER BY cart_price DESC 
LIMIT 10 */

}

 