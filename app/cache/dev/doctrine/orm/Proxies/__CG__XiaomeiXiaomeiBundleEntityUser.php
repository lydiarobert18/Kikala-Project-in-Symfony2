<?php

namespace Proxies\__CG__\Xiaomei\XiaomeiBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \Xiaomei\XiaomeiBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'id', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'username', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'email', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'password', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'name', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'firstname', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'nombreCredit', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'birthyear', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'sex', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'metier', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'descriptifFormateur', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'descriptifEtudiant', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'photo', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'file', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'salt', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'token', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'isActive', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'dateRegistered', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'cours', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'inscription');
        }

        return array('__isInitialized__', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'id', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'username', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'email', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'password', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'name', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'firstname', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'nombreCredit', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'birthyear', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'sex', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'metier', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'descriptifFormateur', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'descriptifEtudiant', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'photo', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'file', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'salt', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'token', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'isActive', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'dateRegistered', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'cours', '' . "\0" . 'Xiaomei\\XiaomeiBundle\\Entity\\User' . "\0" . 'inscription');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', array($username));

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', array());

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstname($firstname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstname', array($firstname));

        return parent::setFirstname($firstname);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstname', array());

        return parent::getFirstname();
    }

    /**
     * {@inheritDoc}
     */
    public function setBirthyear($birthyear)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirthyear', array($birthyear));

        return parent::setBirthyear($birthyear);
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthyear()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthyear', array());

        return parent::getBirthyear();
    }

    /**
     * {@inheritDoc}
     */
    public function setSex($sex)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSex', array($sex));

        return parent::setSex($sex);
    }

    /**
     * {@inheritDoc}
     */
    public function getSex()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSex', array());

        return parent::getSex();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetier($metier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetier', array($metier));

        return parent::setMetier($metier);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetier', array());

        return parent::getMetier();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescriptifFormateur($descriptifFormateur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescriptifFormateur', array($descriptifFormateur));

        return parent::setDescriptifFormateur($descriptifFormateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescriptifFormateur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescriptifFormateur', array());

        return parent::getDescriptifFormateur();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescriptifEtudiant($descriptifEtudiant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescriptifEtudiant', array($descriptifEtudiant));

        return parent::setDescriptifEtudiant($descriptifEtudiant);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescriptifEtudiant()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescriptifEtudiant', array());

        return parent::getDescriptifEtudiant();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhoto($photo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhoto', array($photo));

        return parent::setPhoto($photo);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhoto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhoto', array());

        return parent::getPhoto();
    }

    /**
     * {@inheritDoc}
     */
    public function setFile($file)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFile', array($file));

        return parent::setFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function getFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFile', array());

        return parent::getFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalt($salt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalt', array($salt));

        return parent::setSalt($salt);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', array());

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function setToken($token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToken', array($token));

        return parent::setToken($token);
    }

    /**
     * {@inheritDoc}
     */
    public function getToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToken', array());

        return parent::getToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsActive($isActive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsActive', array($isActive));

        return parent::setIsActive($isActive);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsActive', array());

        return parent::getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateRegistered($dateRegistered)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateRegistered', array($dateRegistered));

        return parent::setDateRegistered($dateRegistered);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateRegistered()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateRegistered', array());

        return parent::getDateRegistered();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', array());

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', array());

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', array());

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', array($serialized));

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function addRole(\Xiaomei\XiaomeiBundle\Entity\Role $roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', array($roles));

        return parent::addRole($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole(\Xiaomei\XiaomeiBundle\Entity\Role $roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', array($roles));

        return parent::removeRole($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function setNombreCredit($nombreCredit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNombreCredit', array($nombreCredit));

        return parent::setNombreCredit($nombreCredit);
    }

    /**
     * {@inheritDoc}
     */
    public function getNombreCredit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNombreCredit', array());

        return parent::getNombreCredit();
    }

    /**
     * {@inheritDoc}
     */
    public function isEqualTo(\Symfony\Component\Security\Core\User\UserInterface $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEqualTo', array($user));

        return parent::isEqualTo($user);
    }

    /**
     * {@inheritDoc}
     */
    public function addCour(\Xiaomei\XiaomeiBundle\Entity\Cours $cours)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCour', array($cours));

        return parent::addCour($cours);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCour(\Xiaomei\XiaomeiBundle\Entity\Cours $cours)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCour', array($cours));

        return parent::removeCour($cours);
    }

    /**
     * {@inheritDoc}
     */
    public function getCours()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCours', array());

        return parent::getCours();
    }

    /**
     * {@inheritDoc}
     */
    public function addInscription(\Xiaomei\XiaomeiBundle\Entity\Inscription $inscription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addInscription', array($inscription));

        return parent::addInscription($inscription);
    }

    /**
     * {@inheritDoc}
     */
    public function removeInscription(\Xiaomei\XiaomeiBundle\Entity\Inscription $inscription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeInscription', array($inscription));

        return parent::removeInscription($inscription);
    }

    /**
     * {@inheritDoc}
     */
    public function getInscription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInscription', array());

        return parent::getInscription();
    }

}
